{"version":3,"file":"elo-ranking.js","sourceRoot":"","sources":["../../../src/elements/elo-ranking.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAC1C,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,+BAA+B,CAAC;AAC/D,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EACL,oBAAoB,GAErB,MAAM,8BAA8B,CAAC;AAEtC,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AACvD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD,OAAO,EAAE,eAAe,EAAE,MAAM,YAAY,CAAC;AAE7C,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEhD,MAAM,OAAO,UAAW,SAAQ,mBAAmB,CAAC,UAAU,CAAC;IAA/D;;QAQE,aAAQ,GAAG,IAAI,CAAC;QAEhB,iBAAY,GAAG,IAAI,eAAe,CAChC,IAAI,EACJ,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CACxC,CAAC;QACF,gBAAW,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAkE3E,CAAC;IAhEC,KAAK,CAAC,YAAY;QAChB,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QAC7C,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxD,MAAM,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAEpD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,YAAY,CAAC,WAA2B,EAAE,GAAW;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAErD,OAAO,IAAI,CAAA;;;;iBAIE,WAAW;;;oDAGwB,WAAW;;;aAGlD,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW;;4BAEzB,GAAG;;KAE1B,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAA;QACP,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CACb,CAAC,CAAC,EAAE,CAAC,IAAI,CAAA;;;;;SAKR,CACF;WACI,CAAC;IACV,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,QAAQ;YAAE,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;QAEhD,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAC/B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC,CACxC;;KAEJ,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,cAAc;QACvB,OAAO;YACL,aAAa,EAAE,UAAU;YACzB,UAAU,EAAE,IAAI;YAChB,eAAe,EAAE,QAAQ;SAC1B,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO,YAAY,CAAC;IACtB,CAAC;CACF;AA9EC;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;6CACzB;AAGrB;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC;kDACpB;AAG/B;IADC,KAAK,EAAE;4CACQ","sourcesContent":["import { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { html, LitElement } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { List, ListItem } from '@scoped-elements/material-web';\nimport { contextProvided } from '@lit-labs/context';\nimport {\n  profilesStoreContext,\n  ProfilesStore,\n} from '@holochain-open-dev/profiles';\nimport { AgentPubKeyB64 } from '@holochain-open-dev/core-types';\nimport { SlSkeleton } from '@scoped-elements/shoelace';\nimport { StoreSubscriber } from 'lit-svelte-stores';\n\nimport { eloStoreContext } from '../context';\nimport { EloStore } from '../elo-store';\nimport { sharedStyles } from '../shared-styles';\n\nexport class EloRanking extends ScopedElementsMixin(LitElement) {\n  @contextProvided({ context: eloStoreContext })\n  _eloStore!: EloStore;\n\n  @contextProvided({ context: profilesStoreContext })\n  _profilesStore!: ProfilesStore;\n\n  @state()\n  _loading = true;\n\n  _allProfiles = new StoreSubscriber(\n    this,\n    () => this._profilesStore.knownProfiles\n  );\n  _eloRanking = new StoreSubscriber(this, () => this._eloStore.eloRanking);\n\n  async firstUpdated() {\n    await this._profilesStore.fetchAllProfiles();\n    const allPubKeys = Object.keys(this._allProfiles.value);\n    await this._eloStore.fetchElosForAgents(allPubKeys);\n\n    this._loading = false;\n  }\n\n  renderPlayer(agentPubKey: AgentPubKeyB64, elo: number) {\n    const profile = this._allProfiles.value[agentPubKey];\n\n    return html`\n      <mwc-list-item\n        graphic=\"avatar\"\n        hasMeta\n        .value=${agentPubKey}\n        style=\"--mdc-list-item-graphic-size: 32px;\"\n      >\n        <agent-avatar slot=\"graphic\" .agentPubKey=${agentPubKey}>\n        </agent-avatar>\n        <span style=\"margin-left: 8px;\"\n          >${profile ? profile.nickname : agentPubKey}</span\n        >\n        <span slot=\"meta\">${elo}</span>\n      </mwc-list-item>\n    `;\n  }\n\n  renderSkeleton() {\n    return html` <div class=\"column\">\n      ${[0, 1, 2].map(\n        _ => html`\n          <div class=\"row\">\n            <sl-skeleton effect=\"sheen\"></sl-skeleton>\n            <sl-skeleton effect=\"sheen\"></sl-skeleton>\n          </div>\n        `\n      )}\n    </div>`;\n  }\n\n  render() {\n    if (this._loading) return this.renderSkeleton();\n\n    return html`\n      <mwc-list>\n        ${this._eloRanking.value.map(e =>\n          this.renderPlayer(e.agentPubKey, e.elo)\n        )}\n      </mwc-list>\n    `;\n  }\n\n  static get scopedElements() {\n    return {\n      'sl-skeleton': SlSkeleton,\n      'mwc-list': List,\n      'mwc-list-item': ListItem,\n    };\n  }\n\n  static get styles() {\n    return sharedStyles;\n  }\n}\n"]}
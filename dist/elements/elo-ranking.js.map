{"version":3,"file":"elo-ranking.js","sourceRoot":"","sources":["../../src/elements/elo-ranking.ts"],"names":[],"mappings":"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","sourcesContent":["import { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { html, LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ref } from 'lit/directives/ref.js';\nimport { when } from 'lit/directives/when.js';\nimport {\n  Card,\n  CircularProgress,\n  List,\n  ListItem,\n} from '@scoped-elements/material-web';\nimport { contextProvided } from '@holochain-open-dev/context';\nimport { AgentAvatar } from '@holochain-open-dev/profiles';\nimport { AgentPubKeyB64 } from '@holochain-open-dev/core-types';\nimport { SlSkeleton } from '@scoped-elements/shoelace';\nimport { StoreSubscriber } from 'lit-svelte-stores';\n\nimport { eloStoreContext } from '../context';\nimport { EloStore } from '../state/elo-store';\nimport { sharedStyles } from '../shared-styles';\nimport { EloRankingStore } from '../state/ranking-store';\n\nexport class EloRankingElement extends ScopedElementsMixin(LitElement) {\n  @contextProvided({ context: eloStoreContext })\n  _eloStore!: EloStore;\n\n  @state()\n  _loading = true;\n\n  private _allProfiles = new StoreSubscriber(\n    this,\n    () => this._eloStore.profilesStore.knownProfiles\n  );\n\n  @property({ type: Object })\n  private _rankingStore!: EloRankingStore;\n\n  private _eloRanking = new StoreSubscriber(this, () => this._rankingStore);\n\n  async firstUpdated() {\n    this._rankingStore = this._eloStore.createEloRankingStore(1);\n    await this._rankingStore.fetchNextChunk();\n\n    this._loading = false;\n  }\n\n  respondToVisibility(\n    element: HTMLElement,\n    callback: (visible: boolean) => void\n  ) {\n    const options = {\n      root: this.shadowRoot?.firstElementChild,\n    };\n\n    const observer = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        callback(entry.intersectionRatio > 0);\n      });\n    }, options);\n\n    observer.observe(element);\n  }\n\n  renderPlayer(agentPubKey: AgentPubKeyB64, elo: number) {\n    const profile = this._allProfiles.value[agentPubKey];\n\n    return html`\n      <mwc-list-item\n        graphic=\"avatar\"\n        hasMeta\n        .value=${agentPubKey}\n        style=\"--mdc-list-item-graphic-size: 32px;\"\n      >\n        <agent-avatar slot=\"graphic\" .agentPubKey=${agentPubKey}>\n        </agent-avatar>\n        <span>${profile ? profile.nickname : agentPubKey}</span>\n        <span slot=\"meta\" style=\"color: black; font-size: 16px;\">${elo}</span>\n      </mwc-list-item>\n    `;\n  }\n\n  renderSkeleton() {\n    return html` <div class=\"column\" style=\"margin-top: 8px; margin-left: 4px;\">\n      ${[0, 1, 2].map(\n        () => html`\n          <div class=\"row\" style=\"align-items: center; margin: 8px;\">\n            <sl-skeleton\n              effect=\"sheen\"\n              style=\"width: 32px; height: 32px; margin-right: 16px;\"\n            ></sl-skeleton>\n\n            <sl-skeleton\n              effect=\"sheen\"\n              style=\"width: 200px; height: 16px;\"\n            ></sl-skeleton>\n          </div>\n        `\n      )}\n    </div>`;\n  }\n\n  renderRanking() {\n    const rankingEntries = Object.entries(this._eloRanking.value?.ranking);\n    if (rankingEntries.length === 0) return html``;\n\n    return html`\n      <div class=\"flex-scrollable-parent\">\n        <div class=\"flex-scrollable-container\">\n          <div class=\"flex-scrollable-y\">\n            <mwc-list noninteractive style=\"margin-right: 8px;\">\n              ${rankingEntries.map(([eloRanking, agentsPubKeys]) =>\n                agentsPubKeys.map(agentPubKey =>\n                  this.renderPlayer(agentPubKey, parseInt(eloRanking))\n                )\n              )}\n            </mwc-list>\n\n            ${when(\n              this._eloRanking.value.thereAreMoreChunksToFetch,\n              () => html`\n                <div\n                  class=\"row\"\n                  style=\"align-items: center; justify-content: center\"\n                >\n                  <mwc-circular-progress\n                    indeterminate\n                    ${ref(\n                      el =>\n                        el &&\n                        this.respondToVisibility(\n                          el as HTMLElement,\n                          visible =>\n                            visible && this._rankingStore.fetchNextChunk()\n                        )\n                    )}\n                  ></mwc-circular-progress>\n                </div>\n              `\n            )}\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  render() {\n    return html`\n      <mwc-card style=\"flex: 1; min-width: 270px;\">\n        <div class=\"column\" style=\"margin: 16px; flex: 1;\">\n          <span class=\"title\">ELO Ranking</span>\n          ${this._loading ? this.renderSkeleton() : this.renderRanking()}\n        </div>\n      </mwc-card>\n    `;\n  }\n\n  static get scopedElements() {\n    return {\n      'sl-skeleton': SlSkeleton,\n      'agent-avatar': AgentAvatar,\n      'mwc-card': Card,\n      'mwc-list': List,\n      'mwc-list-item': ListItem,\n      'mwc-circular-progress': CircularProgress,\n    };\n  }\n\n  static get styles() {\n    return [sharedStyles];\n  }\n}\n"]}
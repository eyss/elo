{"version":3,"file":"elo-store.js","sourceRoot":"","sources":["../src/elo-store.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AgentPubKeyB64,\n  EntryHashB64,\n  serializeHash,\n} from '@holochain-open-dev/core-types';\nimport { ProfilesStore } from '@holochain-open-dev/profiles';\nimport { HoloHashed } from '@holochain/conductor-api';\nimport { derived, writable, Writable } from 'svelte/store';\nimport { EloService } from './elo-service';\nimport { GameResult } from './types';\nimport { headerTimestamp } from './utils';\n\nexport enum ShortResult {\n  Win = 1.0,\n  Loss = 0.0,\n  Draw = 0.5,\n}\n\nexport class EloStore {\n  #gameResults: Writable<{\n    [key: AgentPubKeyB64]: Array<[HoloHashed<any>, GameResult]>;\n  }> = writable({});\n\n  #elos: Writable<{\n    [key: AgentPubKeyB64]: number;\n  }> = writable({});\n\n  public elos = derived(this.#elos, i => i);\n\n  public eloRanking = derived(this.#elos, i =>\n    Object.entries(i)\n      .map(([agentPubKey, elo]) => ({ agentPubKey, elo }))\n      .sort((a, b) => b.elo - a.elo)\n  );\n\n  public gameResults = derived(this.#gameResults, i => i);\n\n  public myElo = derived(this.#elos, i => i[this.myAgentPubKey]);\n\n  public myGameResults = derived(this.#gameResults, i => {\n    const myResults = i[this.myAgentPubKey];\n    if (!myResults) return [];\n    return myResults.sort(\n      (\n        gr1,\n        gr2 // TODO: fix this\n      ) => headerTimestamp(gr2[0]) - headerTimestamp(gr1[0])\n    );\n  });\n\n  public get myAgentPubKey() {\n    return serializeHash(this.eloService.cellClient.cellId[1]);\n  }\n\n  constructor(\n    protected eloService: EloService,\n    public profilesStore: ProfilesStore\n  ) {\n    // TODO: remove when scheduler actually works\n    setInterval(() => this.eloService.resolveFlags(), 5000);\n    this.eloService.resolveFlags();\n\n    this.eloService.cellClient.addSignalHandler(signal => {\n      if (signal.data.payload.type === 'NewGameResult') {\n        this.handleNewGameResult(\n          signal.data.payload.game_result,\n          signal.data.payload.entry_hash,\n          signal.data.payload.are_links_missing\n        );\n      }\n    });\n  }\n\n  /** Helpers for the types */\n\n  getOpponent(gameResult: GameResult): AgentPubKeyB64 {\n    if (gameResult.player_a.player_address === this.myAgentPubKey)\n      return gameResult.player_b.player_address;\n    return gameResult.player_a.player_address;\n  }\n\n  getMyResult(gameResult: GameResult): number {\n    if (gameResult.player_a.player_address) return gameResult.score_player_a;\n    return 1 - gameResult.score_player_a;\n  }\n\n  /** Backend actions */\n\n  async fetchMyGameResults() {\n    return this.fetchGameResultsForAgents([this.myAgentPubKey]);\n  }\n\n  async fetchMyElo() {\n    return this.fetchEloForAgents([this.myAgentPubKey]);\n  }\n\n  async fetchGameResultsForAgents(agents: AgentPubKeyB64[]): Promise<void> {\n    const gameResults = await this.eloService.getGameResultsForAgents(agents);\n\n    this.#gameResults.update(r => ({ ...r, ...gameResults }));\n  }\n\n  async fetchEloForAgents(agents: AgentPubKeyB64[]): Promise<void> {\n    const elos = await this.eloService.getEloRatingForAgents(agents);\n    this.#elos.update(e => ({ ...e, ...elos }));\n  }\n\n  private async handleNewGameResult(\n    gameResult: GameResult,\n    gameResultHash: EntryHashB64,\n    areLinksMissing: boolean\n  ) {\n    // TODO: remove when post_commit lands\n\n    if (areLinksMissing) {\n      await this.eloService.linkGameResults([gameResultHash]);\n    }\n\n    const players = [\n      gameResult.player_a.player_address,\n      gameResult.player_b.player_address,\n    ];\n\n    const promises = [\n      this.fetchGameResultsForAgents(players),\n      this.fetchEloForAgents(players),\n      this.profilesStore.fetchAgentsProfiles(players),\n    ];\n    await Promise.all(promises);\n  }\n}\n"]}